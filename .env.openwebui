# =============================================================================
# OPENWEBUI CONFIGURATION
# =============================================================================

#
# Requires users to authenticate before using the UI.
#
WEBUI_AUTH=True

#
# Display name shown in the OpenWebUI header/metadata.
#
WEBUI_NAME=LightRAG Production

#
# Short description shown in the OpenWebUI about/metadata.
#
WEBUI_DESCRIPTION=RAG System with Knowledge Graphs

#
# Base URL where the UI expects an OpenAI-compatible API (LightRAG proxy).
#
OPENAI_API_BASE_URL=http://rag:9621/v1

#
# API key used by OpenWebUI to authenticate to the LightRAG API.
#
OPENAI_API_KEY=${LIGHTRAG_API_KEY}

#
# Lifetime of user JWTs before requiring reauthentication.
#
JWT_EXPIRES_IN=1h

#
# Allow users to sign up via external OAuth providers.
#
ENABLE_OAUTH_SIGNUP=false

#
# Allow direct signups via the local login form.
#
ENABLE_SIGNUP=false

#
# Role assigned to first/auto-created user accounts.
#
DEFAULT_USER_ROLE=admin

#
# Enables admin data export features within the UI.
#
ENABLE_ADMIN_EXPORT=true

#
# Allow sharing prompts/conversations with the community.
#
ENABLE_COMMUNITY_SHARING=false

#
# Displays the login form at the sign-in route.
#
ENABLE_LOGIN_FORM=true

#
# Enables file uploads to support RAG document ingestion.
#
FILE_UPLOAD_ENABLED=true

#
# Maximum upload size (in MB) allowed per file.
#
FILE_UPLOAD_SIZE_LIMIT=200

#
# Comma-separated list of allowed file extensions for upload.
#
SUPPORTED_FILE_TYPES=.pdf,.doc,.docx,.txt,.md,.csv,.json

#
# Enables chat-completion features in the UI.
#
CHAT_COMPLETION_ENABLED=true

#
# Stores and shows prior conversation history in the UI.
#
CHAT_HISTORY_ENABLED=true

#
# Maximum number of prior messages kept per thread.
#
MAX_CHAT_HISTORY=50

#
# Permitted origins for cross-origin requests from browsers.
#
CORS_ALLOW_ORIGIN=*

# =============================================================================
# PERFORMANCE OPTIMIZATION - USING EXISTING SERVICES
# =============================================================================

#
# Redis URL used by OpenWebUI for caching, sessions, and rate limiting.
#
REDIS_URL=redis://kv:6379/0

#
# Redis host for OpenWebUI services when not using the URL.
#
REDIS_HOST=kv

#
# Redis port for OpenWebUI services when not using the URL.
#
REDIS_PORT=6379

#
# Toggles Redis-based features (cache, session, rate limiting).
#
ENABLE_REDIS=true

#
# Vector database provider used by OpenWebUI for search (e.g., qdrant).
#
VECTOR_DB=qdrant

#
# HTTP endpoint of the existing Qdrant instance used for search.
#
QDRANT_URI=http://vectors:6333

#
# API key used by OpenWebUI to access the Qdrant instance.
#
QDRANT_API_KEY=${QDRANT_API_KEY}

#
# Name of the Qdrant collection used by OpenWebUI for indexing.
#
QDRANT_COLLECTION_NAME=openwebui

#
# Enables hybrid (sparse+dense) search where supported.
#
ENABLE_RAG_HYBRID_SEARCH=true

#
# Enables local web fetch for RAG (retrieve content from URLs locally).
#
ENABLE_RAG_LOCAL_WEB_FETCH=true

#
# Enables external web search integration for RAG.
#
ENABLE_RAG_WEB_SEARCH=false

#
# Embedding provider engine used by OpenWebUI for RAG.
#
RAG_EMBEDDING_ENGINE=openai

#
# Embedding model ID OpenWebUI uses for RAG.
#
RAG_EMBEDDING_MODEL=text-embedding-3-small

#
# Batch size for embedding requests sent by OpenWebUI.
#
RAG_EMBEDDING_BATCH_SIZE=10

#
# Number of documents to retrieve per query.
#
RAG_TOP_K=5

#
# Minimum relevance score threshold for retrieved documents.
#
RAG_RELEVANCE_THRESHOLD=0.0

#
# Content extraction engine used to parse uploaded files.
#
CONTENT_EXTRACTION_ENGINE=tika

#
# Toggles server-side content extraction.
#
ENABLE_CONTENT_EXTRACTION=true

#
# Enables search UI and search endpoints.
#
ENABLE_SEARCH=true

#
# Backend provider for search features (e.g., qdrant).
#
SEARCH_BACKEND=qdrant

#
# Enables full-text search where supported by the backend.
#
ENABLE_FULLTEXT_SEARCH=true

#
# Turns on model filtering in the UI for quicker selection.
#
ENABLE_MODEL_FILTER=true

#
# Enables server-sent events streaming for responses.
#
ENABLE_STREAMING=true

#
# Enables global rate limiting in OpenWebUI.
#
ENABLE_RATE_LIMITING=true

#
# Backend used to store rate limit counters (e.g., redis).
#
RATE_LIMIT_STORE=redis

#
# Maximum allowed requests per minute per user/IP.
#
RATE_LIMIT_PER_MINUTE=60

#
# Maximum allowed requests per hour per user/IP.
#
RATE_LIMIT_PER_HOUR=1000

#
# Marks the session cookie as secure (HTTPS only) when behind a proxy.
#
SESSION_COOKIE_SECURE=true

#
# Marks the session cookie as HttpOnly to mitigate XSS risks.
#
SESSION_COOKIE_HTTPONLY=true

#
# Session storage backend for OpenWebUI.
#
SESSION_BACKEND=redis
